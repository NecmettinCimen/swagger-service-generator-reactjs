{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","pathSearch","window","location","search","useState","indexOf","slice","length","url","setUrl","error","setError","success","setSuccess","openRawFile","setOpenRawFile","endpoint","setEndpoint","api","setApi","handleSubmit","e","a","preventDefault","parseApi","SwaggerParser","validate","endpointStr","paths","Object","keys","index","element","replaceAll","replace","console","className","style","gridTemplateColumns","onSubmit","value","onChange","target","required","type","placeholder","aria-label","marginLeft","info","title","version","class","onClick","cursor","mode","theme","name","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26320730.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport SwaggerParser from '@apidevtools/swagger-parser'\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\n\nfunction App() {\n  const pathSearch = window.location.search + '';\n\n  const [url, setUrl] = useState(pathSearch !== \"\" && pathSearch.indexOf(\"?q=\") !== -1 ? pathSearch.slice(3, pathSearch.length) : \"\")\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(null)\n  const [openRawFile, setOpenRawFile] = useState(false)\n  const [endpoint, setEndpoint] = useState('')\n  const [api, setApi] = useState(null)\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await parseApi();\n  }\n\n  const parseApi = async () => {\n    setError(false);\n    setSuccess(null)\n\n    try {\n      let api = await SwaggerParser.validate(url);\n      let endpointStr = 'export enum EndPoint { \\n';\n\n      const paths = Object.keys(api.paths);\n      for (let index = 0; index < paths.length; index++) {\n        const element = paths[index];\n        endpointStr += `${element.slice(1, element.length).replaceAll('/', '_').replace('_{id}', '')} = '${element}', \\n`;\n      }\n      endpointStr = endpointStr.slice(0, -3);\n\n      endpointStr += '\\n}';\n      setApi(api)\n      setSuccess(true)\n      setEndpoint(endpointStr)\n    }\n    catch (err) {\n      console.error(err);\n      setError(true)\n    }\n  }\n\n  return openRawFile ? <div>{endpoint}</div> : (\n    <div>\n      <header className=\"py-3 mb-3 border-bottom\">\n        <div className=\"container-fluid d-grid gap-3 align-items-center\" style={{ gridTemplateColumns: '1fr 2fr' }}>\n          Swagger Service Generator\n          <div className=\"d-flex align-items-center\">\n            <form onSubmit={handleSubmit} className=\"d-flex align-items-center w-100 me-3\" >\n              <input value={url} onChange={(e) => setUrl(e.target.value)} required type=\"Url\" className=\"form-control\" placeholder=\"Swagger Json Url...\" aria-label=\"Swagger Json Url\" />\n              <div className=\"flex-shrink-0\" style={{ marginLeft: '3px' }}>\n                <button type=\"submit\" className=\"btn btn-primary\" >Generate</button>\n              </div>\n\n            </form>\n          </div>\n        </div>\n      </header>\n      <div className=\"container-fluid pb-3\">\n        {!error ? null : <div className=\"alert alert-danger\">Hata! Girdiğiniz url bilgileri doğrulayamadım.</div>}\n        {success ? <div className=\"alert alert-success\">Başarılı! {api.info.title} {api.info.version} bilgilerini bulabildim.</div> : null}\n        <div className=\"d-grid gap-3\" style={{ gridTemplateColumns: '1fr 2fr' }}>\n          <div className=\"bg-light border rounded-3\">\n            {\n              success ? <ul class=\"list-group\">\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                  EndPoint.js\n                  <span class=\"badge bg-primary rounded-pill\" onClick={() => setOpenRawFile(true)} style={{ cursor: 'pointer' }}>Raw file</span>\n                </li>\n              </ul> : null\n            }\n            <br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n          </div>\n          <div className=\"bg-light border rounded-3\">\n            {\n              success ? <AceEditor\n                placeholder=\"Endpoint.js\"\n                mode=\"javascript\"\n                theme=\"github\"\n                name=\"blah2\"\n                fontSize={14}\n                showPrintMargin={true}\n                showGutter={true}\n                highlightActiveLine={true}\n                value={endpoint}\n                setOptions={{\n                  enableBasicAutocompletion: true,\n                  enableLiveAutocompletion: true,\n                  enableSnippets: true,\n                  showLineNumbers: true,\n                }} />\n                : <div><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /></div>\n            }\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}